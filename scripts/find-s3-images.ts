import { prisma } from '../src/libs/prismaDb';

async function findS3Images() {
  try {
    console.log('üîç –ü–æ–∏—Å–∫ S3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ò—â–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å S3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    const productsWithS3 = await prisma.products.findMany({
      where: {
        image_url: {
          contains: 's3.ru1.storage.beget.cloud'
        }
      },
      select: {
        id: true,
        name: true,
        image_url: true
      }
    });
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${productsWithS3.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å S3 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:`);
    
    const s3URLs = [];
    for (const product of productsWithS3) {
      console.log(`- ${product.name}: ${product.image_url}`);
      s3URLs.push(product.image_url);
    }
    
    // –¢–∞–∫–∂–µ –∏—â–µ–º —Ç–æ–≤–∞—Ä—ã —Å –¥—Ä—É–≥–∏–º–∏ –≤–Ω–µ—à–Ω–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    const productsWithExternal = await prisma.products.findMany({
      where: {
        image_url: {
          startsWith: 'http'
        },
        NOT: {
          image_url: {
            contains: 's3.ru1.storage.beget.cloud'
          }
        }
      },
      select: {
        id: true,
        name: true,
        image_url: true
      }
    });
    
    console.log(`\n–ù–∞–π–¥–µ–Ω–æ ${productsWithExternal.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å –¥—Ä—É–≥–∏–º–∏ –≤–Ω–µ—à–Ω–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:`);
    for (const product of productsWithExternal) {
      console.log(`- ${product.name}: ${product.image_url}`);
    }
    
    // –í—ã–≤–æ–¥–∏–º –º–∞—Å—Å–∏–≤ S3 URL –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–∫—Ä–∏–ø—Ç–µ
    if (s3URLs.length > 0) {
      console.log('\nüìã –ú–∞—Å—Å–∏–≤ S3 URL –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞:');
      console.log(JSON.stringify(s3URLs, null, 2));
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

findS3Images(); 