#!/usr/bin/env npx tsx

async function testPhotoMigrationAPI() {
  const baseUrl = 'http://localhost:3000';
  
  console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –º–∏–≥—Ä–∞—Ü–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ (GET)...');
    const statusResponse = await fetch(`${baseUrl}/api/webapp/reviews/migrate-photos`);
    const statusData = await statusResponse.json();
    
    console.log('–°—Ç–∞—Ç—É—Å:', statusResponse.status);
    console.log('–î–∞–Ω–Ω—ã–µ:', JSON.stringify(statusData, null, 2));
    console.log('\n');
    
    // 2. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å
    if (statusData.migrationNeeded) {
      console.log('‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏!');
      console.log(`   Active Storage: ${statusData.activeStorage?.totalPhotos || 0} —Ñ–æ—Ç–æ`);
      console.log(`   –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: ${statusData.newSystem?.totalPhotos || 0} —Ñ–æ—Ç–æ`);
      console.log('\n');
      console.log('–î–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
      console.log('curl -X POST http://localhost:3000/api/webapp/reviews/migrate-photos');
    } else if (statusData.error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', statusData.error);
      console.log('\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('1. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
      console.log('2. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      console.log('3. –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ');
    } else {
      console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
      console.log(`   –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ: ${statusData.newSystem?.totalPhotos || 0}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API:', error);
    console.log('\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:');
    console.log('1. –°–µ—Ä–≤–µ—Ä Next.js –∑–∞–ø—É—â–µ–Ω (npm run dev)');
    console.log('2. –ü–æ—Ä—Ç 3000 –¥–æ—Å—Ç—É–ø–µ–Ω');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
async function testPhotoUpload() {
  console.log('\n\nüì∏ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π...\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º presigned URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ presigned URL...');
    const uploadResponse = await fetch('http://localhost:3000/api/webapp/reviews/upload', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        fileName: 'test-photo.jpg',
        fileType: 'image/jpeg'
      })
    });
    
    const uploadData = await uploadResponse.json();
    
    if (uploadData.uploadUrl) {
      console.log('‚úÖ Presigned URL –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      console.log('   URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:', uploadData.uploadUrl.substring(0, 100) + '...');
      console.log('   –ö–ª—é—á —Ñ–∞–π–ª–∞:', uploadData.key);
      console.log('   URL —Ñ–æ—Ç–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏:', uploadData.photoUrl);
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
      console.log('   –û—Ç–≤–µ—Ç:', JSON.stringify(uploadData, null, 2));
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
async function runTests() {
  await testPhotoMigrationAPI();
  await testPhotoUpload();
}

runTests(); 