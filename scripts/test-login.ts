import fetch from 'node-fetch';

async function testLogin() {
  try {
    console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É...');
    
    // 1. –ü–æ–ª—É—á–∞–µ–º CSRF —Ç–æ–∫–µ–Ω
    console.log('1. –ü–æ–ª—É—á–µ–Ω–∏–µ CSRF —Ç–æ–∫–µ–Ω–∞...');
    const csrfResponse = await fetch('http://localhost:3000/api/auth/csrf');
    const csrfData = await csrfResponse.json() as any;
    console.log('CSRF —Ç–æ–∫–µ–Ω:', csrfData.csrfToken);

    // 2. –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏
    console.log('2. –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞...');
    const loginResponse = await fetch('http://localhost:3000/api/auth/callback/credentials', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: new URLSearchParams({
        csrfToken: csrfData.csrfToken,
        email: 'go@osama.agency',
        password: 'admin123',
        callbackUrl: 'http://localhost:3000/pages/settings'
      }),
      redirect: 'manual'
    });

    console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', loginResponse.status);
    console.log('–ó–∞–≥–æ–ª–æ–≤–∫–∏:', Object.fromEntries(loginResponse.headers.entries()));
    
    if (loginResponse.status === 302) {
      const location = loginResponse.headers.get('location');
      console.log('‚úÖ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞:', location);
      
      if (location?.includes('/pages/settings')) {
        console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É!');
      } else if (location?.includes('/login')) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –ª–æ–≥–∏–Ω');
      }
    } else {
      const text = await loginResponse.text();
      console.log('–û—Ç–≤–µ—Ç:', text.substring(0, 500));
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏...');
    const sessionResponse = await fetch('http://localhost:3000/api/auth/session', {
      headers: {
        'Cookie': loginResponse.headers.get('set-cookie') || ''
      }
    });
    const sessionData = await sessionResponse.json();
    console.log('–î–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏:', sessionData);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

testLogin(); 