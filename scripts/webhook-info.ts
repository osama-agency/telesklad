#!/usr/bin/env ts-node

import { TelegramBotWorker } from '../src/lib/services/TelegramBotWorker';

async function getWebhookInfo() {
  console.log('üåê –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook...');

  try {
    const worker = TelegramBotWorker.getInstance();
    const info = await worker.getWebhookInfo();
    
    if (info) {
      console.log('‚úÖ Webhook –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞:');
      console.log('üìã –î–µ—Ç–∞–ª–∏:', JSON.stringify(info, null, 2));
      
      if (info.url) {
        console.log(`üîó URL: ${info.url}`);
        console.log(`üìä –û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${info.pending_update_count}`);
        console.log(`üîí IP –∞–¥—Ä–µ—Å: ${info.ip_address || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${info.last_error_date || '–ù–µ—Ç'}`);
        
        if (info.last_error_message) {
          console.log(`‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏: ${info.last_error_message}`);
        }
      } else {
        console.log('‚ö†Ô∏è Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      }
    } else {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook');
      process.exit(1);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook:', error);
    process.exit(1);
  }
}

getWebhookInfo(); 