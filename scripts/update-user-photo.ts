import { UserService } from '../src/lib/services/UserService';
import { prisma } from '../src/libs/prismaDb';

async function updateUserPhoto(tgId: string) {
  try {
    console.log(`üîÑ Updating photo for user with tg_id: ${tgId}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.users.findUnique({
      where: { tg_id: BigInt(tgId) },
      select: {
        id: true,
        tg_id: true,
        first_name_raw: true,
        username: true,
        photo_url: true
      }
    });

    if (!user) {
      console.error('‚ùå User not found');
      process.exit(1);
    }

    console.log(`üë§ Found user: ${user.first_name_raw || user.username || 'Unknown'}`);
    console.log(`üì∑ Current photo_url: ${user.photo_url || 'None'}`);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ç–æ
    const newPhotoUrl = await UserService.updateUserPhotoFromTelegram(tgId);

    if (newPhotoUrl) {
      console.log(`‚úÖ Photo updated successfully!`);
      console.log(`üñºÔ∏è New photo URL: ${newPhotoUrl}`);
    } else {
      console.log('‚ùå Failed to update photo - no photo found or API error');
    }

  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ü–æ–ª—É—á–∞–µ–º tg_id –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const tgId = process.argv[2];

if (!tgId) {
  console.error('Usage: npm run update-photo <tg_id>');
  process.exit(1);
}

updateUserPhoto(tgId); 