import { prisma } from '../src/libs/prismaDb';

async function checkOrderMessages() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∑–∞–∫–∞–∑–æ–≤...\n');
    
    const messageKeys = [
      'tg_msg_unpaid_main',
      'tg_msg_paid_client', 
      'tg_msg_paid_admin',
      'tg_msg_on_processing_client',
      'tg_msg_on_processing_courier',
      'tg_msg_on_shipped_courier',
      'tg_msg_set_track_num'
    ];
    
    for (const key of messageKeys) {
      const setting = await prisma.settings.findFirst({
        where: { variable: key }
      });
      
      if (setting) {
        console.log(`‚úÖ ${key}:`);
        console.log(`   ${setting.value?.substring(0, 100)}...`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        const variables = setting.value?.match(/\{[^}]+\}/g) || [];
        if (variables.length > 0) {
          console.log(`   –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${variables.join(', ')}`);
        }
      } else {
        console.log(`‚ùå ${key}: –ù–ï –ù–ê–ô–î–ï–ù–û`);
      }
      console.log('');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkOrderMessages();
