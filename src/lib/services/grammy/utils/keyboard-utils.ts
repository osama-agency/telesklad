import { InlineKeyboard } from 'grammy';
import { KeyboardOptions } from '../types/grammy-types';

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä grammY
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–º–µ–Ω–∞ —Å—Ç–∞—Ä—ã—Ö keyboard helpers
 */
export class KeyboardUtils {
  
  /**
   * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è WebApp
   */
  static createWelcomeKeyboard(webappUrl?: string): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è WebApp
    const appUrl = webappUrl || process.env.WEBAPP_URL || 'https://strattera.ngrok.app/webapp';
    keyboard.webApp('üëâ –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', appUrl);
    
    // –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard.row();
    keyboard.url('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'https://t.me/strattera_help');
    keyboard.url('üë• –ù–∞—à–∞ –≥—Ä—É–ø–ø–∞', 'https://t.me/+2rTVT8IxtFozNDY0');
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
   */
  static createUnpaidOrderKeyboard(orderId: string): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    keyboard.text('üí≥ –Ø –æ–ø–ª–∞—Ç–∏–ª', `i_paid_${orderId}`);
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
   */
  static createAdminOrderKeyboard(orderId: string): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    keyboard.text('‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏—à–ª–∞', `approve_payment_${orderId}`);
    keyboard.text('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', `reject_payment_${orderId}`);
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ (–ø—Ä–∏–≤—è–∑–∫–∞ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä–∞)
   */
  static createCourierKeyboard(orderId: string): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    keyboard.text('üì¶ –ü—Ä–∏–≤—è–∑–∞—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä', `submit_tracking_${orderId}`);
    keyboard.text('‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–µ–∑ —Ç—Ä–µ–∫–∏–Ω–≥–∞', `shipped_no_tracking_${orderId}`);
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ –ø–æ—Å—ã–ª–∫–∏
   */
  static createTrackingKeyboard(orderId: string, trackingNumber?: string): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    if (trackingNumber) {
      keyboard.text('üìç –û—Ç—Å–ª–µ–¥–∏—Ç—å –ø–æ—Å—ã–ª–∫—É', `track_package_${orderId}_${trackingNumber}`);
      keyboard.row();
      keyboard.text('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä', `submit_tracking_${orderId}`);
    } else {
      keyboard.text('üì¶ –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä', `submit_tracking_${orderId}`);
    }
    
    keyboard.row();
    keyboard.text('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'track_back');
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
   */
  static createSupportKeyboard(): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    keyboard.url('üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É', 'https://t.me/strattera_help');
    keyboard.row();
    keyboard.url('‚ùì FAQ', 'https://t.me/+2rTVT8IxtFozNDY0');
    keyboard.url('üìû –û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫', 'https://strattera.ngrok.app/support');
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø—Ü–∏—è–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   */
  static createAdminKeyboard(): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    keyboard.text('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'admin_stats');
    keyboard.text('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'admin_settings');
    keyboard.row();
    keyboard.text('üìã –ó–∞–∫–∞–∑—ã', 'admin_orders');
    keyboard.text('üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'admin_users');
    keyboard.row();
    keyboard.text('üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', 'test_notifications');
    keyboard.text('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å', 'admin_reload');
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ (–∞–¥–º–∏–Ω)
   */
  static createOrderStatusKeyboard(orderId: string): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    keyboard.text('‚è≥ –ù–µ–æ–ø–ª–∞—á–µ–Ω', `set_status_${orderId}_unpaid`);
    keyboard.text('‚úÖ –û–ø–ª–∞—á–µ–Ω', `set_status_${orderId}_paid`);
    keyboard.row();
    keyboard.text('üîÑ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ', `set_status_${orderId}_processing`);
    keyboard.text('üì¶ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω', `set_status_${orderId}_shipped`);
    keyboard.row();
    keyboard.text('üèÅ –î–æ—Å—Ç–∞–≤–ª–µ–Ω', `set_status_${orderId}_delivered`);
    keyboard.text('‚ùå –û—Ç–º–µ–Ω–µ–Ω', `set_status_${orderId}_cancelled`);
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
   */
  static createBackKeyboard(callbackData: string = 'back'): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    keyboard.text('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callbackData);
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
   */
  static createConfirmationKeyboard(
    confirmData: string, 
    cancelData: string = 'cancel',
    confirmText: string = '‚úÖ –î–∞',
    cancelText: string = '‚ùå –ù–µ—Ç'
  ): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    keyboard.text(confirmText, confirmData);
    keyboard.text(cancelText, cancelData);
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  static createTestKeyboard(): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    keyboard.text('üß™ Test Callback', 'test_callback');
    keyboard.text('üìä Test Metrics', 'test_metrics');
    keyboard.row();
    keyboard.text('üîî Test Notification', 'test_notification');
    keyboard.text('üì± Test WebApp', 'test_webapp');
    keyboard.row();
    keyboard.webApp('üåê Open WebApp', process.env.WEBAPP_URL || 'https://strattera.ngrok.app/webapp');
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
   */
  static createPaginationKeyboard(
    currentPage: number,
    totalPages: number,
    baseCallback: string
  ): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    const buttons = [];
    
    // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∞—è"
    if (currentPage > 1) {
      buttons.push({ text: '‚¨ÖÔ∏è', callback_data: `${baseCallback}_page_${currentPage - 1}` });
    }
    
    // –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    buttons.push({ text: `${currentPage}/${totalPages}`, callback_data: 'noop' });
    
    // –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∞—è"
    if (currentPage < totalPages) {
      buttons.push({ text: '‚û°Ô∏è', callback_data: `${baseCallback}_page_${currentPage + 1}` });
    }
    
    if (buttons.length > 0) {
      keyboard.add(...buttons);
    }
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
   */
  static createQuantityKeyboard(
    productId: string,
    currentQuantity: number = 1,
    maxQuantity: number = 10
  ): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    const buttons = [];
    
    if (currentQuantity > 1) {
      buttons.push({ text: '‚ûñ', callback_data: `qty_${productId}_${currentQuantity - 1}` });
    }
    
    buttons.push({ text: currentQuantity.toString(), callback_data: 'noop' });
    
    if (currentQuantity < maxQuantity) {
      buttons.push({ text: '‚ûï', callback_data: `qty_${productId}_${currentQuantity + 1}` });
    }
    
    keyboard.add(...buttons);
    
    // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
    keyboard.row();
    keyboard.text('üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', `add_to_cart_${productId}_${currentQuantity}`);
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—Ü–∏–π
   */
  static createDynamicKeyboard(options: KeyboardOptions): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    // WebApp –∫–Ω–æ–ø–∫–∞
    if (options.webappUrl) {
      keyboard.webApp('üõí –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ç–∞–ª–æ–≥', options.webappUrl);
      keyboard.row();
    }
    
    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞
    if (options.orderId) {
      keyboard.text('üí≥ –Ø –æ–ø–ª–∞—Ç–∏–ª', `i_paid_${options.orderId}`);
      
      if (options.trackingNumber) {
        keyboard.row();
        keyboard.text('üìç –û—Ç—Å–ª–µ–¥–∏—Ç—å', `track_package_${options.orderId}_${options.trackingNumber}`);
      }
    }
    
    // –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
    if (options.includeAdminButtons) {
      if (options.orderId) {
        keyboard.row();
        keyboard.text('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É', `approve_payment_${options.orderId}`);
        keyboard.text('üì¶ –¢—Ä–µ–∫-–Ω–æ–º–µ—Ä', `submit_tracking_${options.orderId}`);
      }
    }
    
    // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    if (options.includeBackButton) {
      keyboard.row();
      keyboard.text('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'back');
    }
    
    return keyboard;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∫–Ω–æ–ø–æ–∫
   */
  static createFromArray(
    buttons: Array<{
      text: string;
      callback_data?: string;
      url?: string;
      web_app?: { url: string };
    }>,
    buttonsPerRow: number = 2
  ): InlineKeyboard {
    const keyboard = new InlineKeyboard();
    
    for (let i = 0; i < buttons.length; i += buttonsPerRow) {
      const rowButtons = buttons.slice(i, i + buttonsPerRow);
      
      for (const button of rowButtons) {
        if (button.callback_data) {
          keyboard.text(button.text, button.callback_data);
        } else if (button.url) {
          keyboard.url(button.text, button.url);
        } else if (button.web_app) {
          keyboard.webApp(button.text, button.web_app.url);
        }
      }
      
      if (i + buttonsPerRow < buttons.length) {
        keyboard.row();
      }
    }
    
    return keyboard;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å callback data
   */
  static isValidCallbackData(data: string): boolean {
    // Telegram –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç callback_data –¥–æ 64 –±–∞–π—Ç
    return data && data.length <= 64;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—É—é callback data —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–ª–∏–Ω—ã
   */
  static createSafeCallbackData(prefix: string, ...params: (string | number)[]): string {
    const data = [prefix, ...params].join('_');
    
    if (!this.isValidCallbackData(data)) {
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ, —Å–æ–∑–¥–∞–µ–º —Ö—ç—à
      const hash = require('crypto').createHash('md5').update(data).digest('hex').substring(0, 8);
      return `${prefix}_${hash}`;
    }
    
    return data;
  }

  /**
   * –ü–∞—Ä—Å–∏—Ç callback data –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç
   */
  static parseCallbackData(data: string): { type: string; params: string[] } {
    const parts = data.split('_');
    return {
      type: parts[0] || '',
      params: parts.slice(1)
    };
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export const {
  createWelcomeKeyboard,
  createUnpaidOrderKeyboard,
  createAdminOrderKeyboard,
  createCourierKeyboard,
  createTrackingKeyboard,
  createSupportKeyboard,
  createAdminKeyboard,
  createTestKeyboard,
  createBackKeyboard,
  createConfirmationKeyboard
} = KeyboardUtils;