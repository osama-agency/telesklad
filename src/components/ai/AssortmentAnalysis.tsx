import { useState, useEffect } from "react";
import { useDateRange, getDateRangeParams } from "@/context/DateRangeContext";

interface AssortmentAnalysisProps {
  productsData?: any;
}

interface AIAnalysisData {
  facts: string[];
  recommendations: string[];
  forecasts: {
    days30: string;
    days60: string;
    days90: string;
  };
}

export function AssortmentAnalysis({ productsData }: AssortmentAnalysisProps) {
  const { formatMobileDateRange, dateRange } = useDateRange();
  const [analysisData, setAnalysisData] = useState<AIAnalysisData | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  // –ü–æ–ª—É—á–∞–µ–º –ò–ò-–∞–Ω–∞–ª–∏–∑ —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–µ
  const fetchAIAnalysis = async () => {
    setLoading(true);
    setError(null);
    
    try {
      const params = new URLSearchParams();
      if (dateRange.from) params.append('from', dateRange.from.toISOString());
      if (dateRange.to) params.append('to', dateRange.to.toISOString());
      
      const response = await fetch(`/api/analytics/ai?${params.toString()}`);
      
      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ò–ò-–∞–Ω–∞–ª–∏–∑–∞');
      }
      
      const result = await response.json();
      
      if (result.success) {
        setAnalysisData(result.data.analysis);
      } else {
        throw new Error(result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
      }
    } catch (err) {
      console.error('AI Analysis fetch error:', err);
      setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fallback –¥–∞–Ω–Ω—ã–µ
      setAnalysisData({
        facts: [
          "72% –≤—ã—Ä—É—á–∫–∏ –ø—Ä–∏–Ω–æ—Å—è—Ç 4 —Ç–æ–≤–∞—Ä–∞",
          "8 –ø–æ–∑–∏—Ü–∏–π –≤ CZ ‚Äî –Ω–µ –ø—Ä–æ–¥–∞—é—Ç—Å—è",
          "5 —Ç–æ–≤–∞—Ä–æ–≤ —É–±—ã—Ç–æ—á–Ω—ã (‚Äì11 420 ‚ÇΩ)",
          "–°—Ä–µ–¥–Ω—è—è –º–∞—Ä–∂–∞ —Å–Ω–∏–∑–∏–ª–∞—Å—å –Ω–∞ 3%",
          "23 —Ç–æ–≤–∞—Ä–∞ —Ç—Ä–µ–±—É—é—Ç —Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"
        ],
        recommendations: [
          "–£–≤–µ–ª–∏—á–∏—Ç—å –∑–∞–∫—É–ø Strattera 10mg",
          "–ò—Å–∫–ª—é—á–∏—Ç—å Wellbutrin",
          "–°–Ω–∏–∑–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ Atominex 25mg"
        ],
        forecasts: {
          days30: "–û–∂–∏–¥–∞–µ—Ç—Å—è —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç –ø—Ä–æ–¥–∞–∂ –Ω–∞ 5-8%",
          days60: "–í–æ–∑–º–æ–∂–Ω–æ —Å–Ω–∏–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ 2-3%",
          days90: "–í–æ–∑–≤—Ä–∞—Ç –∫ —Å—Ä–µ–¥–Ω–∏–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º"
        }
      });
    } finally {
      setLoading(false);
    }
  };

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    setAnalysisData({
      facts: [
        "72% –≤—ã—Ä—É—á–∫–∏ –ø—Ä–∏–Ω–æ—Å—è—Ç 4 —Ç–æ–≤–∞—Ä–∞",
        "8 –ø–æ–∑–∏—Ü–∏–π –≤ CZ ‚Äî –Ω–µ –ø—Ä–æ–¥–∞—é—Ç—Å—è",
        "5 —Ç–æ–≤–∞—Ä–æ–≤ —É–±—ã—Ç–æ—á–Ω—ã (‚Äì11 420 ‚ÇΩ)",
        "–°—Ä–µ–¥–Ω—è—è –º–∞—Ä–∂–∞ —Å–Ω–∏–∑–∏–ª–∞—Å—å –Ω–∞ 3%",
        "23 —Ç–æ–≤–∞—Ä–∞ —Ç—Ä–µ–±—É—é—Ç —Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"
      ],
      recommendations: [
        "–£–≤–µ–ª–∏—á–∏—Ç—å –∑–∞–∫—É–ø Strattera 10mg",
        "–ò—Å–∫–ª—é—á–∏—Ç—å Wellbutrin",
        "–°–Ω–∏–∑–∏—Ç—å —Ü–µ–Ω—É –Ω–∞ Atominex 25mg"
      ],
      forecasts: {
        days30: "–û–∂–∏–¥–∞–µ—Ç—Å—è —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç –ø—Ä–æ–¥–∞–∂ –Ω–∞ 5-8%",
        days60: "–í–æ–∑–º–æ–∂–Ω–æ —Å–Ω–∏–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–∞ 2-3%",
        days90: "–í–æ–∑–≤—Ä–∞—Ç –∫ —Å—Ä–µ–¥–Ω–∏–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º"
      }
    });
  }, []); // –¢–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ

  const facts = analysisData?.facts || [];
  const recommendations = analysisData?.recommendations || [];

  const getRecommendationIcon = (index: number) => {
    const icons = ["‚úÖ", "‚ö†Ô∏è", "üìâ", "üîÑ", "üí°"];
    return icons[index % icons.length] || "‚Ä¢";
  };

  if (loading) {
    return (
      <div className="rounded-[10px] bg-white p-6 shadow-1 dark:bg-gray-dark dark:shadow-card mb-7.5">
        <div className="flex items-center justify-center py-8">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mr-3"></div>
          <span className="text-dark-6">ü§ñ –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç...</span>
        </div>
      </div>
    );
  }

  return (
    <div className="rounded-[10px] bg-white p-6 shadow-1 dark:bg-gray-dark dark:shadow-card mb-7.5">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="mb-6">
        <h3 className="text-lg font-semibold text-dark dark:text-white mb-1">
          üß† –ê–Ω–∞–ª–∏–∑ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ ({formatMobileDateRange()})
        </h3>
        <p className="text-sm text-dark-6">
          –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞.
        </p>
      </div>

      {/* –§–∞–∫—Ç—ã */}
      <div className="mb-6">
        <ul className="space-y-2">
          {facts.map((fact, index) => (
            <li 
              key={index}
              className="flex items-start gap-2 text-sm text-dark dark:text-white"
            >
              <span className="text-dark-6 mt-1 flex-shrink-0">‚Ä¢</span>
              <span>{fact}</span>
            </li>
          ))}
        </ul>
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <div className="mb-6">
        <h4 className="text-base font-medium text-dark dark:text-white mb-3">
          –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–∞–∫—É–ø—É
        </h4>
        <ul className="space-y-2">
          {recommendations.map((recommendation, index) => (
            <li 
              key={index}
              className="flex items-start gap-2 text-sm text-dark dark:text-white"
            >
              <span className="mt-0.5 flex-shrink-0">
                {getRecommendationIcon(index)}
              </span>
              <span>{recommendation}</span>
            </li>
          ))}
        </ul>
      </div>

      {/* –ü—Ä–æ–≥–Ω–æ–∑—ã */}
      {analysisData?.forecasts && (
        <div className="mb-6 p-4 bg-gray-50 dark:bg-dark-2 rounded-lg">
          <h4 className="text-base font-medium text-dark dark:text-white mb-3">
            üìà –ü—Ä–æ–≥–Ω–æ–∑—ã –ø—Ä–æ–¥–∞–∂
          </h4>
          <div className="grid gap-2 text-sm">
            <div className="flex justify-between">
              <span className="text-dark-6">30 –¥–Ω–µ–π:</span>
              <span className="text-dark dark:text-white">{analysisData.forecasts.days30}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-dark-6">60 –¥–Ω–µ–π:</span>
              <span className="text-dark dark:text-white">{analysisData.forecasts.days60}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-dark-6">90 –¥–Ω–µ–π:</span>
              <span className="text-dark dark:text-white">{analysisData.forecasts.days90}</span>
            </div>
          </div>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ */}
      <div className="flex justify-start">
        <button 
          onClick={fetchAIAnalysis}
          disabled={loading}
          className="inline-flex items-center gap-2 rounded-lg bg-blue-100 px-4 py-2 text-sm font-medium text-blue-700 hover:bg-blue-200 transition-colors dark:bg-blue-900 dark:text-blue-200 dark:hover:bg-blue-800 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          <span className={loading ? "animate-spin" : ""}>ü§ñ</span>
          {loading ? '–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç...' : '–ó–∞–ø—Ä–æ—Å–∏—Ç—å –ò–ò –∞–Ω–∞–ª–∏–∑'}
        </button>
      </div>
    </div>
  );
} 