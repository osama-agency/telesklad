'use client';
import { useState } from 'react';

export default function DeliveryLocationPicker() {
  const [location, setLocation] = useState<{lat: number, lon: number} | null>(null);
  const [loading, setLoading] = useState(false);

  const requestLocation = () => {
    const tg = window.Telegram?.WebApp;
    if (!tg?.LocationManager) return;

    setLoading(true);
    tg.LocationManager.getLocation((location) => {
      if (location) {
        setLocation({
          lat: location.latitude,
          lon: location.longitude
        });
        // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      }
      setLoading(false);
    });
  };

  return (
    <div className="delivery-location">
      <h3>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</h3>
      {location ? (
        <div className="location-info">
          <p>üìç –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞</p>
          <p>–®–∏—Ä–æ—Ç–∞: {location.lat.toFixed(6)}</p>
          <p>–î–æ–ª–≥–æ—Ç–∞: {location.lon.toFixed(6)}</p>
        </div>
      ) : (
        <button 
          onClick={requestLocation} 
          disabled={loading}
          className="btn-location"
        >
          {loading ? '–û–ø—Ä–µ–¥–µ–ª—è–µ–º...' : 'üìç –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'}
        </button>
      )}
    </div>
  );
} 