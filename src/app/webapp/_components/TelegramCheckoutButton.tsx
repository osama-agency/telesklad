'use client';

import { useEffect, useRef } from 'react';
import { useTelegramHaptic } from '@/hooks/useTelegramHaptic';
import { telegramSDK } from '@/lib/telegram-sdk';

interface TelegramCheckoutButtonProps {
  total: number;
  isLoading: boolean;
  isDisabled: boolean;
  onCheckout: () => void;
}

export default function TelegramCheckoutButton({ 
  total, 
  isLoading, 
  isDisabled, 
  onCheckout 
}: TelegramCheckoutButtonProps) {
  const { impactMedium, notificationSuccess } = useTelegramHaptic();
  const cleanupRef = useRef<(() => void) | null>(null);
  const isConfiguredRef = useRef(false);

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MainButton —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (!telegramSDK.isAvailable() || isConfiguredRef.current) {
      return;
    }

    console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram MainButton');

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    telegramSDK.setLightTheme();

    const handleClick = () => {
      if (isLoading || isDisabled) {
        console.log('üö´ –ö–Ω–æ–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞:', { isLoading, isDisabled });
        return;
      }
      
      console.log('üéØ –ö–ª–∏–∫ –ø–æ MainButton');
      impactMedium();
      onCheckout();
      
      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
      setTimeout(() => {
        notificationSuccess();
      }, 100);
    };

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º MainButton —Å–æ —Å–≤–µ—Ç–ª—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
    const cleanup = telegramSDK.configureMainButton({
      text: `–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ (${total.toLocaleString('ru-RU')} ‚ÇΩ)`,
      color: '#48C928',     // –ó–µ–ª–µ–Ω—ã–π —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏
      textColor: '#FFFFFF', // –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç
      onClick: handleClick,
      show: true,
      enable: !isDisabled && !isLoading
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ WebApp API
    const tg = (window as any).Telegram?.WebApp;
    if (tg?.MainButton) {
      try {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç–∞ MainButton –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞
        setTimeout(() => {
          tg.MainButton.color = '#48C928';
          tg.MainButton.textColor = '#FFFFFF';
          
          // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏
          if (tg.setBottomBarColor) {
            tg.setBottomBarColor('#FFFFFF');
            console.log('üéØ –¶–≤–µ—Ç –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ TelegramCheckoutButton');
          }
          
          console.log('üé® –¶–≤–µ—Ç–∞ MainButton —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞–ø—Ä—è–º—É—é');
        }, 100);
      } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–≤–µ—Ç–∞ MainButton –Ω–∞–ø—Ä—è–º—É—é:', error);
      }
    }

    cleanupRef.current = cleanup;
    isConfiguredRef.current = true;

    console.log('‚úÖ MainButton –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å–æ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º–æ–π');

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      console.log('üßπ –û—á–∏—Å—Ç–∫–∞ MainButton');
      if (cleanupRef.current) {
        cleanupRef.current();
        cleanupRef.current = null;
      }
      isConfiguredRef.current = false;
    };
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–æ–ø—Å–æ–≤
  useEffect(() => {
    if (!telegramSDK.isAvailable() || !isConfiguredRef.current) {
      return;
    }

    const tg = (window as any).Telegram?.WebApp;
    if (!tg?.MainButton) return;

    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è MainButton:', { total, isLoading, isDisabled });

    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
      const buttonText = isLoading 
        ? '–û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑...' 
        : `–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ (${total.toLocaleString('ru-RU')} ‚ÇΩ)`;
      
      tg.MainButton.setText(buttonText);

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
      if (isDisabled || isLoading) {
        tg.MainButton.disable();
      } else {
        tg.MainButton.enable();
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
      if (isLoading) {
        tg.MainButton.showProgress(false);
      } else {
        tg.MainButton.hideProgress();
      }

      console.log('‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è MainButton:', error);
    }
  }, [total, isLoading, isDisabled]); // –¢–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  // Fallback –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞
  if (!telegramSDK.isAvailable()) {
    return (
      <div className="checkout-button-fallback">
        <button 
          onClick={onCheckout}
          disabled={isLoading || isDisabled}
          className="checkout-button-custom-styled"
          style={{
            backgroundColor: '#48C928',
            color: 'white',
            border: 'none',
            borderRadius: '12px',
            padding: '16px 24px',
            fontSize: '16px',
            fontWeight: '600',
            width: '100%',
            cursor: isDisabled || isLoading ? 'not-allowed' : 'pointer',
            opacity: isDisabled || isLoading ? 0.6 : 1,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            gap: '8px',
            transition: 'all 0.2s ease',
            position: 'fixed',
            bottom: '20px',
            left: '16px',
            right: '16px',
            zIndex: 1000,
            boxShadow: '0 4px 12px rgba(72, 201, 40, 0.3)'
          }}
        >
          {isLoading && (
            <div 
              style={{
                width: '20px',
                height: '20px',
                border: '2px solid rgba(255,255,255,0.3)',
                borderTop: '2px solid white',
                borderRadius: '50%',
                animation: 'spin 1s linear infinite'
              }}
            />
          )}
          {isLoading 
            ? '–û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑...' 
            : `–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ (${total.toLocaleString('ru-RU')} ‚ÇΩ)`
          }
        </button>
        
        <style jsx>{`
          @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
          }
          
          .checkout-button-custom-styled:hover:not(:disabled) {
            background-color: #3ba220 !important;
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(72, 201, 40, 0.4) !important;
          }
          
          .checkout-button-custom-styled:active:not(:disabled) {
            transform: translateY(0);
          }
        `}</style>
      </div>
    );
  }

  // –í Telegram –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ MainButton (–≤–æ–∑–≤—Ä–∞—â–∞–µ–º null)
  return null;
}
