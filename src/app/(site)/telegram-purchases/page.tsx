'use client';

import React, { useState } from 'react';

const TelegramPurchasesPage: React.FC = () => {
  const [testResult, setTestResult] = useState<string>('');
  const [loading, setLoading] = useState(false);

  // –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É
  const testBotConnection = async () => {
    setLoading(true);
    setTestResult('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–æ—Ç—É...');

    try {
      const response = await fetch('/api/telegram/test-bot');
      const result = await response.json();
      
      if (result.success) {
        setTestResult(`‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n${JSON.stringify(result.botInfo, null, 2)}`);
      } else {
        setTestResult(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${result.error}`);
      }
    } catch (error: any) {
      setTestResult(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    } finally {
      setLoading(false);
    }
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–∫—É–ø–∫–∏
  const createTestPurchase = async () => {
    setLoading(true);
    setTestResult('–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–∫—É–ø–∫–∏...');

    try {
      const testPurchase = {
        items: [
          {
            productName: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 1',
            quantity: 2,
            costPrice: 15.50,
            total: 31.00
          },
          {
            productName: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä 2',
            quantity: 1,
            costPrice: 25.00,
            total: 25.00
          }
        ],
        totalAmount: 56.00,
        isUrgent: false,
        supplierName: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫',
        notes: '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–∫—É–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏'
      };

      const response = await fetch('/api/purchases', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(testPurchase)
      });

      const result = await response.json();
      
      if (response.ok) {
        setTestResult(`‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–∫—É–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!\n\nID: ${result.id}\n–°—Ç–∞—Ç—É—Å: ${result.status}\n–°—É–º–º–∞: ${result.totalAmount} ‚Ç∫`);
      } else {
        setTestResult(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${result.error}`);
      }
    } catch (error: any) {
      setTestResult(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    } finally {
      setLoading(false);
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  const sendTestMessage = async () => {
    setLoading(true);
    setTestResult('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');

    try {
      const response = await fetch('/api/telegram/test-message', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          message: 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç TeleAdmin\n\n–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫—É–ø–∫–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!'
        })
      });

      const result = await response.json();
      
      if (result.success) {
        setTestResult(`‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n\nID —Å–æ–æ–±—â–µ–Ω–∏—è: ${result.messageId}`);
      } else {
        setTestResult(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${result.error}`);
      }
    } catch (error: any) {
      setTestResult(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-8">
          ü§ñ Telegram –ó–∞–∫—É–ø–∫–∏ - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        </h1>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className="space-y-6">
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
              <h2 className="text-xl font-semibold mb-4 text-gray-900 dark:text-white">
                –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
              </h2>
              
              <div className="space-y-4">
                <button
                  onClick={testBotConnection}
                  disabled={loading}
                  className="w-full px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center space-x-2"
                >
                  {loading ? (
                    <>
                      <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                      <span>–ü—Ä–æ–≤–µ—Ä–∫–∞...</span>
                    </>
                  ) : (
                    <>
                      <span>üîó</span>
                      <span>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É</span>
                    </>
                  )}
                </button>

                <button
                  onClick={createTestPurchase}
                  disabled={loading}
                  className="w-full px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center space-x-2"
                >
                  {loading ? (
                    <>
                      <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                      <span>–°–æ–∑–¥–∞–Ω–∏–µ...</span>
                    </>
                  ) : (
                    <>
                      <span>üìù</span>
                      <span>–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–∫—É–ø–∫—É</span>
                    </>
                  )}
                </button>

                <button
                  onClick={sendTestMessage}
                  disabled={loading}
                  className="w-full px-4 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center space-x-2"
                >
                  {loading ? (
                    <>
                      <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                      <span>–û—Ç–ø—Ä–∞–≤–∫–∞...</span>
                    </>
                  ) : (
                    <>
                      <span>üí¨</span>
                      <span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</span>
                    </>
                  )}
                </button>
              </div>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
              <h3 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
              </h3>
              
              <div className="space-y-3 text-sm">
                <div className="flex justify-between">
                  <span className="text-gray-600 dark:text-gray-400">–ì—Ä—É–ø–ø–∞ —á–∞—Ç–∞:</span>
                  <span className="font-mono text-gray-900 dark:text-white">-4729817036</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600 dark:text-gray-400">ID –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:</span>
                  <span className="font-mono text-gray-900 dark:text-white">7828956680</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600 dark:text-gray-400">ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</span>
                  <span className="font-mono text-gray-900 dark:text-white">125861752</span>
                </div>
              </div>
            </div>

            {/* –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã */}
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
              <h3 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
                –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã
              </h3>
              
              <div className="space-y-3">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold">1</div>
                  <span className="text-sm text-gray-700 dark:text-gray-300">–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫—É–ø–∫–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-bold">2</div>
                  <span className="text-sm text-gray-700 dark:text-gray-300">–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É —á–µ—Ä–µ–∑ Telegram</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center text-sm font-bold">3</div>
                  <span className="text-sm text-gray-700 dark:text-gray-300">–ü–æ—Å—Ç–∞–≤—â–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —á–µ—Ä–µ–∑ WebApp</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-orange-100 text-orange-600 rounded-full flex items-center justify-center text-sm font-bold">4</div>
                  <span className="text-sm text-gray-700 dark:text-gray-300">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-green-100 text-green-600 rounded-full flex items-center justify-center text-sm font-bold">5</div>
                  <span className="text-sm text-gray-700 dark:text-gray-300">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –≤ –∫–∞—Ä–≥–æ</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-purple-100 text-purple-600 rounded-full flex items-center justify-center text-sm font-bold">6</div>
                  <span className="text-sm text-gray-700 dark:text-gray-300">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –æ –¥–æ—Å—Ç–∞–≤–∫–µ</span>
                </div>
              </div>
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
          <div className="space-y-6">
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
              <h3 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
                –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
              </h3>
              
              {testResult ? (
                <div className="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
                  <pre className="text-sm text-gray-800 dark:text-gray-200 whitespace-pre-wrap font-mono">
                    {testResult}
                  </pre>
                </div>
              ) : (
                <div className="text-center py-8 text-gray-500">
                  –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                </div>
              )}
            </div>

            {/* –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫—É–ø–æ–∫ */}
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
              <h3 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
                –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫—É–ø–æ–∫
              </h3>
              
              <div className="space-y-2">
                {[
                  { status: 'draft', text: 'üóíÔ∏è –ß–µ—Ä–Ω–æ–≤–∏–∫', color: 'bg-gray-100 text-gray-800' },
                  { status: 'sent_to_supplier', text: 'üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫—É', color: 'bg-blue-100 text-blue-800' },
                  { status: 'supplier_editing', text: '‚úèÔ∏è –ü–æ—Å—Ç–∞–≤—â–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç', color: 'bg-yellow-100 text-yellow-800' },
                  { status: 'awaiting_payment', text: 'üí≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—É', color: 'bg-orange-100 text-orange-800' },
                  { status: 'paid', text: 'üí∞ –û–ø–ª–∞—á–µ–Ω–æ', color: 'bg-green-100 text-green-800' },
                  { status: 'shipped', text: 'üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞—Ä–≥–æ', color: 'bg-indigo-100 text-indigo-800' },
                  { status: 'delivered', text: '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ', color: 'bg-emerald-100 text-emerald-800' },
                ].map((item) => (
                  <div key={item.status} className="flex items-center justify-between">
                    <span className="text-sm text-gray-600 dark:text-gray-400">{item.status}</span>
                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${item.color}`}>
                      {item.text}
                    </span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default TelegramPurchasesPage; 