import { NextRequest, NextResponse } from 'next/server';
import { TelegramBotService } from '@/lib/services/telegram-bot.service';

// POST - –æ–±—Ä–∞–±–æ—Ç–∫–∞ webhook –æ—Ç Telegram
export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    console.log('üì® Telegram webhook received:', JSON.stringify(body, null, 2));

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback query (–Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏)
    if (body.callback_query) {
      console.log('üîÑ Processing callback query:', body.callback_query.data);
      await TelegramBotService.handleCallback(body.callback_query);
      return NextResponse.json({ ok: true });
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤ –±—É–¥—É—â–µ–º)
    if (body.message) {
      console.log('üí¨ Processing message:', body.message.text);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      return NextResponse.json({ ok: true });
    }

    console.log('‚ÑπÔ∏è Unknown webhook type, ignoring');
    return NextResponse.json({ ok: true });

  } catch (error) {
    console.error('‚ùå Error processing Telegram webhook:', error);
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}

// GET - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ webhook
export async function GET() {
  return NextResponse.json({ 
    status: 'ok', 
    message: 'Telegram webhook is ready',
    timestamp: new Date().toISOString()
  });
} 